<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        r2laWfnG3PQ/4DToSssjfBMAAAAASUVORK5CYII=
</value>
  </data>
</root>